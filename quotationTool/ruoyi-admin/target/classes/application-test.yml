# 数据源配置
spring:
    datasource:
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.cj.jdbc.Driver
        druid:
            # 主库数据源
            master:
                url: jdbc:mysql://quotationtooldatabase.mysql.database.chinacloudapi.cn:3306/quotationtool-test?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
                username: quotationtooladmin
                password: "!QAZ2wsx#EDC"
            # 从库数据源
            slave:
                # 从数据源开关/默认关闭
                enabled: true
                url: jdbc:mysql://eshopdatabase.mysql.database.chinacloudapi.cn:3306/eshop?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8
                username: viewer_3
                password: "Aa!@123456#"
            # 初始连接数
            initialSize: 5
            # 最小连接池数量
            minIdle: 10
            # 最大连接池数量
            maxActive: 20
            # 配置获取连接等待超时的时间
            maxWait: 60000
            # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
            timeBetweenEvictionRunsMillis: 60000
            # 配置一个连接在池中最小生存的时间，单位是毫秒
            minEvictableIdleTimeMillis: 300000
            # 配置一个连接在池中最大生存的时间，单位是毫秒
            maxEvictableIdleTimeMillis: 900000
            # 配置检测连接是否有效
            validationQuery: SELECT 1 FROM DUAL
            testWhileIdle: true
            testOnBorrow: false
            testOnReturn: false
            webStatFilter: 
                enabled: true
            statViewServlet:
                enabled: true
                # 设置白名单，不填则允许所有访问
                allow:
                url-pattern: /druid/*
                # 控制台管理用户名和密码
                login-username: ruoyi
                login-password: 123456
            filter:
                stat:
                    enabled: true
                    # 慢SQL记录
                    log-slow-sql: true
                    slow-sql-millis: 1000
                    merge-sql: true
                wall:
                    config:
                        multi-statement-allow: true

## eshop接口正式环境
#eshop_url: https://eshop.bosch-climate.cn/oppty-api
## 获取token
#get_token_url: ${eshop_url}/eshop/api/outi7e/token
##eshop推送数据
#push_eshop_url: ${eshop_url}/eshop/api/outi7e/quotation
## 客户端密钥（用户获取token）
#client_secret: 0145a111
## 签名密钥（用于请求参数签名）
#sign_secret: 0a665ccb

#################################测试使用##############################################
# eshop接口测试环境
eshop_url: https://eshop.5000m.com:40244/test-api
# 获取token
get_token_url: ${eshop_url}/eshop/api/outi7e/token
#eshop推送数据
push_eshop_url: ${eshop_url}/eshop/api/outi7e/quotation
# 客户端密钥（用户获取token）
client_secret: 0178a456
# 签名密钥（用于请求参数签名）
sign_secret: 0b741aac

#二维码的连接地址
home_url: https://quotation.ttconfort.shop/index.html#/quotation/first

#单点登录实现
adfs:
    clientId: 304635a7-f07d-4cd2-8934-eac7e7eea74f
    clientSecret: hIaOLhXDpMZzYwffvCUc5XY2O0GQFbZ3qNR1-mXu
#    clientId: 4b4e10c3-b097-40d8-8dd8-3386ceb0b346
#    clientSecret:
    redirectUrl: https://quotation.ttconfort.shop/oauth2/login/adfs_callback
    serverUrl: https://stfs.bosch.com
    tokenEndpoint: /adfs/oauth2/token/
    grantType: authorization_code
    authorizeEndpoint: /adfs/oauth2/authorize/
    responseType: code
    scope: openid+profile+offline_access+email
    jwksEndpoint: /adfs/discovery/keys

home:
    #    page: https://dev.ew.bosch-climate.cn/index.html#/
    page: https://quotation.ttconfort.shop/index.html#/index