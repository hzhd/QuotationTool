<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.business.mapper.ZRecordLedgerMapper">
    
    <resultMap type="ZRecordLedger" id="ZRecordLedgerResult">
        <result property="ledgerId"    column="ledger_id"    />
        <result property="recordId"    column="record_id"    />
        <result property="borrowDate"    column="borrow_date"    />
        <result property="borrower"    column="borrower"    />
        <result property="backDate"    column="back_date"    />
        <result property="backStatus"    column="back_status"    />
        <result property="status"    column="status"    />
        <result property="delFlag"    column="del_flag"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectZRecordLedgerVo">
        select ledger_id, record_id, borrow_date, borrower, back_date, back_status, status, del_flag, create_by, create_time, update_by, update_time, remark from z_record_ledger
    </sql>

    <select id="selectZRecordLedgerList" parameterType="ZRecordLedger" resultMap="ZRecordLedgerResult">
        <include refid="selectZRecordLedgerVo"/>
        <where>  
            <if test="recordId != null  and recordId != ''"> and record_id = #{recordId}</if>
            <if test="borrowDate != null "> and borrow_date = #{borrowDate}</if>
            <if test="borrower != null  and borrower != ''"> and borrower = #{borrower}</if>
            <if test="backDate != null "> and back_date = #{backDate}</if>
            <if test="backStatus != null  and backStatus != ''"> and back_status = #{backStatus}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
        </where>
    </select>
    
    <select id="selectZRecordLedgerByLedgerId" parameterType="Long" resultMap="ZRecordLedgerResult">
        <include refid="selectZRecordLedgerVo"/>
        where ledger_id = #{ledgerId}
    </select>
        
    <insert id="insertZRecordLedger" parameterType="ZRecordLedger" useGeneratedKeys="true" keyProperty="ledgerId">
        insert into z_record_ledger
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="recordId != null">record_id,</if>
            <if test="borrowDate != null">borrow_date,</if>
            <if test="borrower != null">borrower,</if>
            <if test="backDate != null">back_date,</if>
            <if test="backStatus != null and backStatus != ''">back_status,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="delFlag != null and delFlag != ''">del_flag,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="recordId != null">#{recordId},</if>
            <if test="borrowDate != null">#{borrowDate},</if>
            <if test="borrower != null">#{borrower},</if>
            <if test="backDate != null">#{backDate},</if>
            <if test="backStatus != null and backStatus != ''">#{backStatus},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="delFlag != null and delFlag != ''">#{delFlag},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateZRecordLedger" parameterType="ZRecordLedger">
        update z_record_ledger
        <trim prefix="SET" suffixOverrides=",">
            <if test="recordId != null">record_id = #{recordId},</if>
            <if test="borrowDate != null">borrow_date = #{borrowDate},</if>
            <if test="borrower != null">borrower = #{borrower},</if>
            <if test="backDate != null">back_date = #{backDate},</if>
            <if test="backStatus != null and backStatus != ''">back_status = #{backStatus},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="delFlag != null and delFlag != ''">del_flag = #{delFlag},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where ledger_id = #{ledgerId}
    </update>

    <delete id="deleteZRecordLedgerByLedgerId" parameterType="Long">
        delete from z_record_ledger where ledger_id = #{ledgerId}
    </delete>

    <delete id="deleteZRecordLedgerByLedgerIds" parameterType="String">
        delete from z_record_ledger where ledger_id in 
        <foreach item="ledgerId" collection="array" open="(" separator="," close=")">
            #{ledgerId}
        </foreach>
    </delete>
</mapper>